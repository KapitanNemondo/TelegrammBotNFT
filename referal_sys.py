import baseReferData as baseRefer
import enum
import operator
from telebot import types # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
from config import bot, callback_capcha, flag_capcha
from random import randint

CHANEL_ID = -1001688299683
"""ID –∫–∞–Ω–∞–ª–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –±–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏"""

GRUPP_ID = -1001747825412
"""ID —á–∞—Ç–∞ –≤ –∫–æ—Ç–æ—Ä–æ–º –±–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏"""

main_url = 'https://t.me/ton_elephants_presale_bot?start='

class InlineSet(enum.Enum):
    getReferUrl = 1
    updateDate = 2
    getScore = 3
    getAllUser = 4
    myUrl = 5
    search = 6

def ControllSkaner():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–∏–≤–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∫–æ–Ω–∫—É—Ä—Å–∞:
    `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª`, `–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —á–∞—Ç`, `–Ω–µ –±–æ—Ç`
    """
    dataUser = baseRefer.GetUser()
    goodUser = tuple()

    out = 'üõ°–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Ä–æ–∑—ã–≥—Ä—ã—à–∞üõ°\n\nüëÆ‚Äç‚ôÄÔ∏è–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–∏üëÆ‚Äç‚ôÄÔ∏è:' + '\n' + '\n'

    count = 1
    predel = 15

    regim = baseRefer.GetConfig()

    for elem in dataUser:

        user = int(elem['tg_id_user'])

        dataGrupp = bot.get_chat_member(chat_id=GRUPP_ID, user_id= user)
        dataChanel = bot.get_chat_member(chat_id=CHANEL_ID, user_id= user)
        

        if dataChanel.status != 'left' and dataGrupp.status != 'left' and dataChanel.user.is_bot != True and dataGrupp.user.is_bot != True:
            bot.send_message(user, text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –í—ã –Ω–µ —Ä–æ–±–æ—Ç", reply_markup=show_data_user(user))
            pass
            
        else:
            out +=  f'Position:     {count}\n' \
                    f'Id User:      {user}\n' \
                    f'User name:    @{dataGrupp.user.username}\n' \
                    f'Chanel stat:  {dataChanel.status}\n'\
                    f'Grupp stat:   {dataGrupp.status}\n\n'

            count += 1

            refer = elem['tg_id_ref']

            """ !!! ------–û–±–∫–∞—Ç–∞—Ç—å –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º------ !!!"""
            baseRefer.SetCountRefer(refer, user)

        if count > predel:
            bot.send_message(baseRefer.admin_list[0], text=out)

            out = ''

            predel += 15
    bot.send_message(baseRefer.admin_list[0], text=out)
    bot.send_message(baseRefer.admin_list[0], text='–ü–æ–∏—Å–∫ –æ–∫–æ–Ω—á–µ–Ω')
    


def GetInfoUser():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–∞—Ö –∫–æ–Ω–∫—É—Ä—Å–∞ `Position`, `Id User`, `User name`, `Is bot`, `Count refer`
    """
    dataFinalist = baseRefer.GetFinalist()
    
    dataFinalist.sort(key=operator.itemgetter('count_refer'), reverse=True)

    out = '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–Ω–∞–ª–∏—Å—Ç–∞—Ö:' + '\n' + '\n'

    count = 1
    predel = 50

    for elem in dataFinalist:

        user = int(elem['tg_id_ref'])

        
        data = bot.get_chat_member(chat_id=user, user_id=user)

        

        

        count_refer = baseRefer.FindItod(user)
        out +=  f'Position:     {count}\n' \
                f'User name:    @{data.user.username}\n' 
        #        f'Count refer:  {count_refer}\n\n'

        count += 1
#                   f'Id User:      {user}\n' \
#                    f'Is bot:       {data.user.is_bot}\n' \
        if count > predel:
            bot.send_message(baseRefer.admin_list[0], text=out)

            out = ''

            predel += 15
    bot.send_message(baseRefer.admin_list[0], text=out)

# –æ–∫
def _update():
    """–§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ `–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ`"""
    markup = types.InlineKeyboardMarkup()
    

    # if ref_id != None:
    #     refer_id = ref_id
    # else:
    #     refer_id = None

    update = types.InlineKeyboardButton("–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data="updateDate")
    markup.add(update)

    return markup

# –æ–∫
def chek_sub_channel(chat_member_chal, chat_member_grupp, chat_id, ref_id=None):

    """
    –ü—Ä–æ–≤–µ–∫—Ä–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ç–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª
    `chat_member` - —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    `chat_id` - id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    `ref_id` - id —Ä–µ—Ñ–µ—Ä–µ—Ä–∞ –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é `None`

    """

    if ref_id != None:
        if chat_member_chal.status != 'left' and chat_member_grupp.status != 'left':
            # print("[Chek Sub Chanel] succesfull")
            baseRefer.UpdateCountRefer(ref_id, chat_id)
            markup = types.InlineKeyboardMarkup()

            getReferUrl = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É", callback_data="getReferUrl")

            markup.add(getReferUrl)
            bot.send_message(chat_id, text="–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã, —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ "
                                            "–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ NFT, –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è "
                                            "–ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–º–æ–∂–µ—Ç–µ "
                                            "–ø–µ—Ä–µ—Å–ª–∞—Ç—å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–π–¥—ë—Ç "
                                            "–ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ—á–∫–∏, —á–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤, "
                                            "—Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å–æ–≤ –∑–∞–±—Ä–∞—Ç—å —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã",
                            reply_markup=markup)
        else:
            bot.send_message(chat_id, text="–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É: –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", reply_markup=_update())
    else:
        if chat_member_chal.status != 'left' and chat_member_grupp.status != 'left':
            # print("[Chek Sub Chanel] succesfull")

            markup = types.InlineKeyboardMarkup()

            getReferUrl = types.InlineKeyboardButton("–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É", callback_data="getReferUrl")

            markup.add(getReferUrl)
            bot.send_message(chat_id, text="–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã, —Ç–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ "
                                            "–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ NFT, –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è "
                                            "–ø–æ—Å–ª–µ —á–µ–≥–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –≤–∞—à—É —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Å–º–æ–∂–µ—Ç–µ "
                                            "–ø–µ—Ä–µ—Å–ª–∞—Ç—å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–π–¥—ë—Ç "
                                            "–ø–æ —Å—Å—ã–ª–∫–µ –∏ –ø–æ–¥–ø–∏—à–µ—Ç—Å—è –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –æ—á–∫–∏, —á–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤, "
                                            "—Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å–æ–≤ –∑–∞–±—Ä–∞—Ç—å —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã",
                            reply_markup=markup)
        else:
            bot.send_message(chat_id, text="–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É: –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", reply_markup=_update())

# –æ–∫        
def show_url_sub():
    """–í—ã–≤–æ–¥ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏"""
    
    markup = types.InlineKeyboardMarkup()

    markup.row_width = 2

    log_inst = types.InlineKeyboardButton(text="Instagram", url='https://instagram.com/ton_elephants')
    log_tg = types.InlineKeyboardButton(text="Telegram", url='https://t.me/ton_elephants')
    log_chat = types.InlineKeyboardButton(text='–ù–∞—à —á–∞—Ç', url='https://t.me/+4w1S6lz5c3s2MzJi')


    markup.add(log_inst, log_tg, log_chat)
    return markup

# –æ–∫
def show_data_user(chat_id):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ 
    –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –ø–æ–¥–ø–∏—Å–∞–≤—à–∏—Ö—Å—è —Å –Ω–µ–π
    """
    # regim = baseRefer.GetConfig()
    markup = types.InlineKeyboardMarkup()


    url = types.InlineKeyboardButton('–ú–æ—è —Å—Å—ã–ª–∫–∞', callback_data="myUrl")
    score = types.InlineKeyboardButton('–°—á–µ—Ç', callback_data="getScore")

    #get_all_score = types.KeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å —Å—á–µ—Ç –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤')

    get_info_all_user = types.InlineKeyboardButton('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö', callback_data="getAllUser")

    #updata_bot = types.KeyboardButton(text='–û–±–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞')

    policeBot = types.InlineKeyboardButton('–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å—ã—â–∏–∫–∞', callback_data="search")

    # getAutorization = types.KeyboardButton(text='–Ø –Ω–µ —Ä–æ–±–æ—Ç')

    
    

    for elem in baseRefer.admin_list:
        if elem == chat_id:
            if elem == baseRefer.admin_list[0]:
                markup.add(score, get_info_all_user)

    markup.add(url, score)
    
    # elif regim == 2:
    #     markup.add(score, getAutorization)
    
    return markup

def StartMessage(message):
    regim = baseRefer.GetConfig()
    id_refer = baseRefer.GetIdRefer(message.chat.id)

    # print(regim)

    if True:

        print(id_refer)

        if id_refer == 0:


            chat_id = message.chat.id
            user = message.chat.first_name

            bot.send_message(message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚úåüèª\n"
                                                "–≠—Ç–æ –±–æ—Ç –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—Ç –∫–æ–º–∞–Ω–¥—ã TON ELEPHANT‚ÄôSüíéüêò\n"
                                                    "–ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à NFT\n\n"
                                                    "–ú—ã –Ω–µ –º–æ–≥–ª–∏ –Ω–µ –∑–∞–º–µ—Ç–∏—Ç—å, —á—Ç–æ –í—ã, –≤–æ–∑–º–æ–∂–Ω–æ, —Å–∞–º–∏ –Ω–∞—Å –Ω–∞—à–ª–∏, –ø–æ—ç—Ç–æ–º—É "
                                                    "–Ω–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç –í–∞–º –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ. "
                                                    "–î–ª—è —ç—Ç–æ–≥–æ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—Å—è –Ω–∞ –≤—Å–µ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã. "
                                                    "–ó–∞ —ç—Ç–æ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É. "
                                                    "–≠—Ç—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–≤–æ–∏–º –∑–Ω–∞–∫–æ–º—ã–º. "
                                                    "–ó–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º—ã –Ω–∞—á–∏—Å–ª–∏–º –æ—á–∫–∏. "
                                                    "–í—Å—ë –ø—Ä–æ—Å—Ç–æ, —á–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤, —Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É. üèÖ"
                                                    "–ï—Å–ª–∏ –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ"
                                                    "`–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É`",
                                                    reply_markup=show_url_sub())
            
            

            chek_sub_channel(bot.get_chat_member(chat_id=CHANEL_ID, user_id=message.chat.id),
                            bot.get_chat_member(chat_id=GRUPP_ID, user_id=message.chat.id),
                            message.chat.id
                            )

        else:

            bot.send_message(message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚úåüèª\n"
                                                "–≠—Ç–æ –±–æ—Ç –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—Ç –∫–æ–º–∞–Ω–¥—ã TON ELEPHANT‚ÄôSüíéüêò\n"
                                                    "–ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à NFT\n\n"
                                                    "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç –í–∞–º –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ. "
                                                    "–î–ª—è —ç—Ç–æ–≥–æ –í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–ø–∏—Å–∞—Ç—Å—è –Ω–∞ –≤—Å–µ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã. "
                                                    "–ó–∞ —ç—Ç–æ –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É. "
                                                    "–≠—Ç—É —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –í—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å–ª–∞—Ç—å —Å–≤–æ–∏–º –∑–Ω–∞–∫–æ–º—ã–º. "
                                                    "–ó–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º—ã –Ω–∞—á–∏—Å–ª–∏–º –æ—á–∫–∏. "
                                                    "–í—Å—ë –ø—Ä–æ—Å—Ç–æ, —á–µ–º –±–æ–ª—å—à–µ –æ—á–∫–æ–≤, —Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å—ã –Ω–∞ –ø–æ–±–µ–¥—É. üèÖ"
                                                    "–ï—Å–ª–∏ –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã, —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ"
                                                    "`–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É`",
                                                    reply_markup=show_url_sub())

            chek_sub_channel(bot.get_chat_member(chat_id=CHANEL_ID, user_id=message.chat.id),
                            bot.get_chat_member(chat_id=GRUPP_ID, user_id=message.chat.id),
                            message.chat.id,
                            ref_id=id_refer
                            )
    elif regim == "close":
        bot.send_message(message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚úåüèª\n"
                                                "–≠—Ç–æ –±–æ—Ç –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—Ç –∫–æ–º–∞–Ω–¥—ã TON ELEPHANT‚ÄôSüíéüêò\n"
                                                "–ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à NFT\n\n"
                                                "–°—Ä–æ–∫–∏ –∫–æ–Ω–∫—É—Ä—Å–∞ –ø–æ–¥–æ—à–ª–∏ –∫ –∫–æ–Ω—Ü—É, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤ 11:00 –∑–∞–∫—Ä—ã–ª—Å—è –ø—Ä–∏–µ–º "
                                                "–Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –°–µ–π—á–∞—Å –í—ã –º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å, —á—Ç–æ –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –±–æ—Ç–æ–º –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à —Å—á–µ—Ç\n"
                                                "–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É: –Ø –Ω–µ —Ä–æ–±–æ—Ç\n\n"
                                                "–í 15:00 –±—É–¥—É—Ç —É–∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–æ–∑—ã–≥—Ä—ã—à–∞üò±üêò\n"
                                                "–ú—ã –í–∞–º –≤—ã—à–ª–µ–º –ì—É–≥–ª —Ç–∞–±–ª–∏—Ü—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –í—ã –±—É–¥–µ—Ç–µ –∏—Å–∫–∞—Ç—å —Å–µ–±—è)",
                                                reply_markup=show_data_user(message.chat.id))
    elif regim == "konez":
        bot.send_message(message.chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!‚úåüèª\n"
                                                "–≠—Ç–æ –±–æ—Ç –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä–≤–æ–≥–æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –æ—Ç –∫–æ–º–∞–Ω–¥—ã TON ELEPHANT‚ÄôSüíéüêò\n"
                                                "–ú—ã –ø—Ä–æ–≤–æ–¥–∏–º —Ä–æ–∑—ã–≥—Ä—ã—à NFT\n\n"
                                                "–°—Ä–æ–∫–∏ –∫–æ–Ω–∫—É—Ä—Å–∞ –ø–æ–¥–æ—à–ª–∏ –∫ –∫–æ–Ω—Ü—É, –∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –≤ 11:00 –∑–∞–∫—Ä—ã–ª—Å—è –ø—Ä–∏–µ–º "
                                                "–Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.", reply_markup=types.ReplyKeyboardRemove())

def ChekUser(message, id_refer):
    global callback_capcha
    # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    # capcha_one = types.KeyboardButton(text=callback_capcha[0])
    # capcha_two = types.KeyboardButton(text=callback_capcha[1])
    # capcha_tree = types.KeyboardButton(text=callback_capcha[2])
    # capcha_four = types.KeyboardButton(text=callback_capcha[3])
    # capcha_five = types.KeyboardButton(text=callback_capcha[4])


    markup = types.InlineKeyboardMarkup()

    capcha_one = types.InlineKeyboardButton(text=callback_capcha[0], callback_data=callback_capcha[0])
    capcha_two = types.InlineKeyboardButton(text=callback_capcha[1], callback_data=callback_capcha[1])
    capcha_tree = types.InlineKeyboardButton(text=callback_capcha[2], callback_data=callback_capcha[2])
    capcha_four = types.InlineKeyboardButton(text=callback_capcha[3], callback_data=callback_capcha[3])
    capcha_five = types.InlineKeyboardButton(text=callback_capcha[4], callback_data=callback_capcha[4])

    markup.add(capcha_one, capcha_two, capcha_tree, capcha_four, capcha_five)
    
    markup.row_width = 2

    capcha_id = randint(0, 4)

    capcha = callback_capcha[capcha_id]

    baseRefer.SetCapcha(message.chat.id, capcha_id, id_refer)

    bot.send_message(message.chat.id, text="–î–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å—Ç–Ω–æ—Å—Ç–∏, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫—É\n"
                                            "–î–ª—è —ç—Ç–æ–≥–æ, –Ω–∞–π–¥–∏—Ç–µ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n"
                                            f"{capcha}",
                    reply_markup=markup
    )
    
