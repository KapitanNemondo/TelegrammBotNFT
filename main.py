import telebot
import message as ms
from telebot import types # –¥–ª—è —É–∫–∞–∑–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
# import config
import bd
import sys


flag = False
flag_text = False
number_score = []
regim = 2
count = 0
score = 0

#main variables
TOKEN = "5441817147:AAE7iPvtrJuWpgVcmIvvjs0snF70pdrSKvw"
bot = telebot.TeleBot(TOKEN)


def MainMenu(message):      # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    btn1 = types.KeyboardButton("üíº –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏")
    btn2 = types.KeyboardButton("üíµ –ö—É–ø–∏—Ç—å NFT")
    btn3 = types.KeyboardButton("üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞")
    btn4 = types.KeyboardButton("üè¶ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—á–µ—Ç")
    markup.add(btn1, btn2, btn3, btn4)

    return markup

@bot.message_handler(commands=['reset'])
def reset(message):
    bot.send_message(message.chat.id, text="üíéTON ELEPHANTSüíé\n–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n{message}".format(message.from_user, message=ms.HellouText()), reply_markup = MainMenu(message))

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ä—Ç
@bot.message_handler(commands=['start'])
def start_handler(message):
    global regim
    regim = 1
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    login = types.KeyboardButton("üíª –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—Å—è")

    markup.add(login)
    bot.send_message(message.chat.id, text="üíéTON ELEPHANTSüíé\n–ü—Ä–∏–≤–µ—Ç, {0.first_name}!\n{message}".format(message.from_user, message=ms.HellouText()), reply_markup = markup)

# –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–æ–Ω —Å—á–µ—Ç–∞, —Ä–µ–∂–∏–º 4
def getUserAdressNFT(message):
    global regim
    global number_score

    
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    Yes = types.KeyboardButton("–î–∞")
    No = types.KeyboardButton("–ù–µ—Ç")
    Back = types.KeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')


    number_score.append(message.text)

    markup.add(Yes, No, Back)
    bot.send_message(message.chat.id, text="–ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ —Å—á–µ—Ç–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç?\n {text}".format(text=number_score[0]), reply_markup = markup)

    

    if message.text == "–î–∞":
        bd.ToWriteNumberScore(message.chat.id, number_score[0])
        bot.send_message(message.chat.id, text="–ù–æ–º–µ—Ä —Å—á–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω", reply_markup=MainMenu(message))
        flag = False
        flag_text = False
        number_score.clear()
        regim = 2
    elif message.text == "–ù–µ—Ç":
        bot.send_message(message.chat.id, text="–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑")
        flag = True
        flag_text = False
        number_score.clear()
    elif message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        bot.send_message(message.chat.id, text="–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏", reply_markup=MainMenu(message))
        flag = False
        flag_text = False
        number_score.clear()
        regim = 2

# –ú–µ–Ω—é –ø–æ–∫—É–ø–∫–∏, —Ä–µ–∂–∏–º 3
def BuyNFT(message):

    global regim, count, score

    if message.text[:8] == '–ö—É–ø–∏—Ç—å x':
                
        ms.c_m.GetParam()

        count = int(message.text[8:].replace('NFT', ''))
        
        for index in range(ms.c_m.param_stage):
            if ms.c_m.param_factor[index] == count and ms.c_m.param_status[index] == '–∏–¥—ë—Ç –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç':
                ms.c_m.GetParam()
                score = count * ms.c_m.param_cost
                bot.send_message(message.chat.id, text="–î–ª—è –ø–æ–∫—É–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: {score} Ton\n–ù–∞ —Å—á–µ—Ç:".format(score= score))
                bot.send_message(message.chat.id, text=bd.TON_NUMBER)

                succsfull = types.KeyboardButton("üíé–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥üíé")
                back = types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")

                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup.add(succsfull, back)

                flag_stage = False

                bot.send_message(message.chat.id, text="–ü–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥", reply_markup=markup)

                break
                        
            else:
                flag_stage = True

        if flag_stage:   
            bot.send_message(message.chat.id, text='üîê–≠—Ç–∞–ø –µ—â—ë –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ªüîê')
            
    elif message.text == 'üíé–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥üíé':
        flag = bd.ToWriteBdNFT(message.chat.id, count, score)

        if flag:
            bot.send_message(message.chat.id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ {count} —Å–ª–æ–Ω–æ–≤'.format(count=count))
        else:
            bot.send_message(message.chat.id, text='‚ùå–û—à–∏–±–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏‚ùå')
            flag_stage = False 

    elif message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
        BackMenu(message)    

# –ú–µ–Ω—é, —Ä–µ–∂–∏–º 2
def ChekMenu(message):

    global regim, flag

    if message.text == 'üíº –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏':
        bot.send_message(message.chat.id, text='–í–∞—à–∏ –ø–æ–∫—É–ø–∫–∏ \nNFT: {count}'.format(count=bd.GetScore(message.chat.id)))

    elif message.text == 'üíµ –ö—É–ø–∏—Ç—å NFT':

        if bd.ChekNumberScore(message.chat.id):

            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

            btn = []
            for i in range(ms.c_m.param_stage):
                btn.append(types.KeyboardButton("–ö—É–ø–∏—Ç—å x{factor} NFT".format(factor=ms.c_m.param_factor[i])))
                markup.add(btn[i])
                    
            back = types.KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")

            markup.add(back)
                    
            bot.send_message(message.chat.id, text='–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∫—É–ø–∫—É\n\n{news}'.format(news=ms.DayNews()), reply_markup= markup)
            regim = 3
                
        else:
            bot.send_message(message.chat.id, text='–í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ üò¢\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É:')
            flag = True

    elif message.text == 'üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞':
        bot.send_message(message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞:')
        regim = 4
        
    elif message.text == 'üè¶ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—á–µ—Ç':
        #bot.send_message(message.chat.id, text='–¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {score} ‚ÇΩ'.format(score=bd.GetScore(message.chat.id)))
        bot.send_message(message.chat.id, text='–ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π —Å—á–µ—Ç: {score}'.format(score=bd.GetReadNumberScore(message.chat.id)))

# –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é
def BackMenu(message):
    global regim
    bot.send_message(message.chat.id, text=ms.DayNews(), reply_markup = MainMenu(message))
    regim = 2

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
@bot.message_handler(content_types=['text'])
def boot_message(message):
    global flag, regim
    
    if message.chat.type == 'private':

        if regim == 1:          # –†–µ–∂–∏–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            if message.text == 'üíª –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—Å—è':
                bd.NewUserNFT(message.chat.id)

                bot.send_message(message.chat.id, text='‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å', reply_markup= MainMenu(message))

                regim = 2
        
        elif regim == 2:        # –†–µ–∂–∏–º –æ–±—â–µ–≥–æ –º–µ–Ω—é
            ChekMenu(message)
        elif regim == 3:        # –†–µ–∂–∏–º –ü–æ–∫—É–ø–∫–∏
            BuyNFT(message)
        elif regim == 4:        # –†–µ–∂–∏–º –ü–æ–ª—É—á–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
            getUserAdressNFT(message)
        
        if message.text == '‚¨ÖÔ∏è –ù–∞–∑–∞–¥':
            bot.send_message(message.chat.id, text="–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏", reply_markup=MainMenu(message))
            regim = 2
            



# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
# command = sys.stdin.readline()
# if (len(command) != 0):
#     ms.c_m.EditParam(command[:-1])
    


bot.infinity_polling(timeout=30, long_polling_timeout = 10)